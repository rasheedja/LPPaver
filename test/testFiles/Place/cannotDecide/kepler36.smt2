; kepler.py
; d=3 , n=6

(set-logic QF_NRA)
; declare variables holding coordinates for the centre of a sphere
(declare-fun c1_1 () Real)
(declare-fun c1_2 () Real)
(declare-fun c1_3 () Real)
(declare-fun c2_1 () Real)
(declare-fun c2_2 () Real)
(declare-fun c2_3 () Real)
(declare-fun c3_1 () Real)
(declare-fun c3_2 () Real)
(declare-fun c3_3 () Real)
(declare-fun c4_1 () Real)
(declare-fun c4_2 () Real)
(declare-fun c4_3 () Real)
(declare-fun c5_1 () Real)
(declare-fun c5_2 () Real)
(declare-fun c5_3 () Real)
(declare-fun c6_1 () Real)
(declare-fun c6_2 () Real)
(declare-fun c6_3 () Real)

; declare variables storing distances between centres
(declare-fun dist1_2_1 () Real)
(declare-fun dist1_2_2 () Real)
(declare-fun dist1_2_3 () Real)
(declare-fun dist1_3_1 () Real)
(declare-fun dist1_3_2 () Real)
(declare-fun dist1_3_3 () Real)
(declare-fun dist1_4_1 () Real)
(declare-fun dist1_4_2 () Real)
(declare-fun dist1_4_3 () Real)
(declare-fun dist1_5_1 () Real)
(declare-fun dist1_5_2 () Real)
(declare-fun dist1_5_3 () Real)
(declare-fun dist1_6_1 () Real)
(declare-fun dist1_6_2 () Real)
(declare-fun dist1_6_3 () Real)
(declare-fun dist2_3_1 () Real)
(declare-fun dist2_3_2 () Real)
(declare-fun dist2_3_3 () Real)
(declare-fun dist2_4_1 () Real)
(declare-fun dist2_4_2 () Real)
(declare-fun dist2_4_3 () Real)
(declare-fun dist2_5_1 () Real)
(declare-fun dist2_5_2 () Real)
(declare-fun dist2_5_3 () Real)
(declare-fun dist2_6_1 () Real)
(declare-fun dist2_6_2 () Real)
(declare-fun dist2_6_3 () Real)
(declare-fun dist3_4_1 () Real)
(declare-fun dist3_4_2 () Real)
(declare-fun dist3_4_3 () Real)
(declare-fun dist3_5_1 () Real)
(declare-fun dist3_5_2 () Real)
(declare-fun dist3_5_3 () Real)
(declare-fun dist3_6_1 () Real)
(declare-fun dist3_6_2 () Real)
(declare-fun dist3_6_3 () Real)
(declare-fun dist4_5_1 () Real)
(declare-fun dist4_5_2 () Real)
(declare-fun dist4_5_3 () Real)
(declare-fun dist4_6_1 () Real)
(declare-fun dist4_6_2 () Real)
(declare-fun dist4_6_3 () Real)
(declare-fun dist5_6_1 () Real)
(declare-fun dist5_6_2 () Real)
(declare-fun dist5_6_3 () Real)

; constrain centre points to be in [-1,1]
(assert (and (<= (- 1) c1_1) (<= c1_1 1)))
(assert (and (<= (- 1) c1_2) (<= c1_2 1)))
(assert (and (<= (- 1) c1_3) (<= c1_3 1)))
(assert (and (<= (- 1) c2_1) (<= c2_1 1)))
(assert (and (<= (- 1) c2_2) (<= c2_2 1)))
(assert (and (<= (- 1) c2_3) (<= c2_3 1)))
(assert (and (<= (- 1) c3_1) (<= c3_1 1)))
(assert (and (<= (- 1) c3_2) (<= c3_2 1)))
(assert (and (<= (- 1) c3_3) (<= c3_3 1)))
(assert (and (<= (- 1) c4_1) (<= c4_1 1)))
(assert (and (<= (- 1) c4_2) (<= c4_2 1)))
(assert (and (<= (- 1) c4_3) (<= c4_3 1)))
(assert (and (<= (- 1) c5_1) (<= c5_1 1)))
(assert (and (<= (- 1) c5_2) (<= c5_2 1)))
(assert (and (<= (- 1) c5_3) (<= c5_3 1)))
(assert (and (<= (- 1) c6_1) (<= c6_1 1)))
(assert (and (<= (- 1) c6_2) (<= c6_2 1)))
(assert (and (<= (- 1) c6_3) (<= c6_3 1)))

; give bounds on possible values for dist constants
(assert (and (<= (- 2) dist1_2_1) (<= dist1_2_1 2)))
(assert (and (<= (- 2) dist1_2_2) (<= dist1_2_2 2)))
(assert (and (<= (- 2) dist1_2_3) (<= dist1_2_3 2)))
(assert (and (<= (- 2) dist1_3_1) (<= dist1_3_1 2)))
(assert (and (<= (- 2) dist1_3_2) (<= dist1_3_2 2)))
(assert (and (<= (- 2) dist1_3_3) (<= dist1_3_3 2)))
(assert (and (<= (- 2) dist1_4_1) (<= dist1_4_1 2)))
(assert (and (<= (- 2) dist1_4_2) (<= dist1_4_2 2)))
(assert (and (<= (- 2) dist1_4_3) (<= dist1_4_3 2)))
(assert (and (<= (- 2) dist1_5_1) (<= dist1_5_1 2)))
(assert (and (<= (- 2) dist1_5_2) (<= dist1_5_2 2)))
(assert (and (<= (- 2) dist1_5_3) (<= dist1_5_3 2)))
(assert (and (<= (- 2) dist1_6_1) (<= dist1_6_1 2)))
(assert (and (<= (- 2) dist1_6_2) (<= dist1_6_2 2)))
(assert (and (<= (- 2) dist1_6_3) (<= dist1_6_3 2)))
(assert (and (<= (- 2) dist2_3_1) (<= dist2_3_1 2)))
(assert (and (<= (- 2) dist2_3_2) (<= dist2_3_2 2)))
(assert (and (<= (- 2) dist2_3_3) (<= dist2_3_3 2)))
(assert (and (<= (- 2) dist2_4_1) (<= dist2_4_1 2)))
(assert (and (<= (- 2) dist2_4_2) (<= dist2_4_2 2)))
(assert (and (<= (- 2) dist2_4_3) (<= dist2_4_3 2)))
(assert (and (<= (- 2) dist2_5_1) (<= dist2_5_1 2)))
(assert (and (<= (- 2) dist2_5_2) (<= dist2_5_2 2)))
(assert (and (<= (- 2) dist2_5_3) (<= dist2_5_3 2)))
(assert (and (<= (- 2) dist2_6_1) (<= dist2_6_1 2)))
(assert (and (<= (- 2) dist2_6_2) (<= dist2_6_2 2)))
(assert (and (<= (- 2) dist2_6_3) (<= dist2_6_3 2)))
(assert (and (<= (- 2) dist3_4_1) (<= dist3_4_1 2)))
(assert (and (<= (- 2) dist3_4_2) (<= dist3_4_2 2)))
(assert (and (<= (- 2) dist3_4_3) (<= dist3_4_3 2)))
(assert (and (<= (- 2) dist3_5_1) (<= dist3_5_1 2)))
(assert (and (<= (- 2) dist3_5_2) (<= dist3_5_2 2)))
(assert (and (<= (- 2) dist3_5_3) (<= dist3_5_3 2)))
(assert (and (<= (- 2) dist3_6_1) (<= dist3_6_1 2)))
(assert (and (<= (- 2) dist3_6_2) (<= dist3_6_2 2)))
(assert (and (<= (- 2) dist3_6_3) (<= dist3_6_3 2)))
(assert (and (<= (- 2) dist4_5_1) (<= dist4_5_1 2)))
(assert (and (<= (- 2) dist4_5_2) (<= dist4_5_2 2)))
(assert (and (<= (- 2) dist4_5_3) (<= dist4_5_3 2)))
(assert (and (<= (- 2) dist4_6_1) (<= dist4_6_1 2)))
(assert (and (<= (- 2) dist4_6_2) (<= dist4_6_2 2)))
(assert (and (<= (- 2) dist4_6_3) (<= dist4_6_3 2)))
(assert (and (<= (- 2) dist5_6_1) (<= dist5_6_1 2)))
(assert (and (<= (- 2) dist5_6_2) (<= dist5_6_2 2)))
(assert (and (<= (- 2) dist5_6_3) (<= dist5_6_3 2)))

; define dist constants
(assert (= dist1_2_1 (- c1_1 c2_1)))
(assert (= dist1_2_2 (- c1_2 c2_2)))
(assert (= dist1_2_3 (- c1_3 c2_3)))
(assert (= dist1_3_1 (- c1_1 c3_1)))
(assert (= dist1_3_2 (- c1_2 c3_2)))
(assert (= dist1_3_3 (- c1_3 c3_3)))
(assert (= dist1_4_1 (- c1_1 c4_1)))
(assert (= dist1_4_2 (- c1_2 c4_2)))
(assert (= dist1_4_3 (- c1_3 c4_3)))
(assert (= dist1_5_1 (- c1_1 c5_1)))
(assert (= dist1_5_2 (- c1_2 c5_2)))
(assert (= dist1_5_3 (- c1_3 c5_3)))
(assert (= dist1_6_1 (- c1_1 c6_1)))
(assert (= dist1_6_2 (- c1_2 c6_2)))
(assert (= dist1_6_3 (- c1_3 c6_3)))
(assert (= dist2_3_1 (- c2_1 c3_1)))
(assert (= dist2_3_2 (- c2_2 c3_2)))
(assert (= dist2_3_3 (- c2_3 c3_3)))
(assert (= dist2_4_1 (- c2_1 c4_1)))
(assert (= dist2_4_2 (- c2_2 c4_2)))
(assert (= dist2_4_3 (- c2_3 c4_3)))
(assert (= dist2_5_1 (- c2_1 c5_1)))
(assert (= dist2_5_2 (- c2_2 c5_2)))
(assert (= dist2_5_3 (- c2_3 c5_3)))
(assert (= dist2_6_1 (- c2_1 c6_1)))
(assert (= dist2_6_2 (- c2_2 c6_2)))
(assert (= dist2_6_3 (- c2_3 c6_3)))
(assert (= dist3_4_1 (- c3_1 c4_1)))
(assert (= dist3_4_2 (- c3_2 c4_2)))
(assert (= dist3_4_3 (- c3_3 c4_3)))
(assert (= dist3_5_1 (- c3_1 c5_1)))
(assert (= dist3_5_2 (- c3_2 c5_2)))
(assert (= dist3_5_3 (- c3_3 c5_3)))
(assert (= dist3_6_1 (- c3_1 c6_1)))
(assert (= dist3_6_2 (- c3_2 c6_2)))
(assert (= dist3_6_3 (- c3_3 c6_3)))
(assert (= dist4_5_1 (- c4_1 c5_1)))
(assert (= dist4_5_2 (- c4_2 c5_2)))
(assert (= dist4_5_3 (- c4_3 c5_3)))
(assert (= dist4_6_1 (- c4_1 c6_1)))
(assert (= dist4_6_2 (- c4_2 c6_2)))
(assert (= dist4_6_3 (- c4_3 c6_3)))
(assert (= dist5_6_1 (- c5_1 c6_1)))
(assert (= dist5_6_2 (- c5_2 c6_2)))
(assert (= dist5_6_3 (- c5_3 c6_3)))

; the goals
(assert (> (+ (* dist1_2_1 dist1_2_1) (+ (* dist1_2_2 dist1_2_2) (* dist1_2_3 dist1_2_3))) 4))
(assert (> (+ (* dist1_3_1 dist1_3_1) (+ (* dist1_3_2 dist1_3_2) (* dist1_3_3 dist1_3_3))) 4))
(assert (> (+ (* dist1_4_1 dist1_4_1) (+ (* dist1_4_2 dist1_4_2) (* dist1_4_3 dist1_4_3))) 4))
(assert (> (+ (* dist1_5_1 dist1_5_1) (+ (* dist1_5_2 dist1_5_2) (* dist1_5_3 dist1_5_3))) 4))
(assert (> (+ (* dist1_6_1 dist1_6_1) (+ (* dist1_6_2 dist1_6_2) (* dist1_6_3 dist1_6_3))) 4))
(assert (> (+ (* dist2_3_1 dist2_3_1) (+ (* dist2_3_2 dist2_3_2) (* dist2_3_3 dist2_3_3))) 4))
(assert (> (+ (* dist2_4_1 dist2_4_1) (+ (* dist2_4_2 dist2_4_2) (* dist2_4_3 dist2_4_3))) 4))
(assert (> (+ (* dist2_5_1 dist2_5_1) (+ (* dist2_5_2 dist2_5_2) (* dist2_5_3 dist2_5_3))) 4))
(assert (> (+ (* dist2_6_1 dist2_6_1) (+ (* dist2_6_2 dist2_6_2) (* dist2_6_3 dist2_6_3))) 4))
(assert (> (+ (* dist3_4_1 dist3_4_1) (+ (* dist3_4_2 dist3_4_2) (* dist3_4_3 dist3_4_3))) 4))
(assert (> (+ (* dist3_5_1 dist3_5_1) (+ (* dist3_5_2 dist3_5_2) (* dist3_5_3 dist3_5_3))) 4))
(assert (> (+ (* dist3_6_1 dist3_6_1) (+ (* dist3_6_2 dist3_6_2) (* dist3_6_3 dist3_6_3))) 4))
(assert (> (+ (* dist4_5_1 dist4_5_1) (+ (* dist4_5_2 dist4_5_2) (* dist4_5_3 dist4_5_3))) 4))
(assert (> (+ (* dist4_6_1 dist4_6_1) (+ (* dist4_6_2 dist4_6_2) (* dist4_6_3 dist4_6_3))) 4))
(assert (> (+ (* dist5_6_1 dist5_6_1) (+ (* dist5_6_2 dist5_6_2) (* dist5_6_3 dist5_6_3))) 4))

(check-sat)
(get-model)
(exit)
